module rom1 (
    input selector[5],   
    output out[38]        //output 38 bits (A+B+ALUFN)
  ) {
  
  const INPUTS = {b00000000000101010000000000000010000010,  //23 - mul
                  b10000100101101000000000000000011100011,  //22 - SRA
                  b00010100011010000000000000000010100001,  //21 - SHR
                  b00010101101111010000000000000101100000,  //20 - SHL
                  b00101100100010101011001101000100011010,  //19 - A
                  b10101100001110100101101011010010010110,  //18 - XOR
                  b00011011001110100100101110010010011110,  //17 - OR
                  b00000000000101010000000000010001011000,  //16 - AND
                  b00000000000000010000000000000000110111,  //15 - CMPLE(False)
                  b00000000000000000000000000000000110111,  //14 - CMPLE(True + Equals)
                  b00000000000000000000000000000001110111,  //13 - CMPLE(True)
                  b00000000000000010000000000000000110101,  //12 - CMPLT(False)
                  b00000000000000000000000000000001110101,  //11 - CMPLT(True)
                  b00000000000000000000000000000001110011,  //10 - CMPEQ(False)
                  b00000000000000000000000000000000110011,  //9 - CMPEQ(True)
                  b00000000000000010000000000000001000001,  //8 - Subtraction(Zero)
                  b10000000000000000111111111111111000001,  //7 - Subtraction(negative overflow)
                  b01111111111111111111111111111111000001,  //6 - Subtraction (positive overflow)
                  b00000000000000011111111111111111000001,  //5 - Subtraction(no overflow)
                  b00000000000000011111111111111111000000,  //4 - Addition(Zero)
                  b10001100001010101110001000101000000000,  //3 - Addition(Negative overflow)
                  b01110010110010110110001000000000000000,  //2 - Addition(Positive overflow)
                  b00000000000101011111111111111011000000   //1 - Addition(No overflow)
  };

  always {
    out = INPUTS[selector];
  }
}